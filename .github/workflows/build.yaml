name: Build Android APK

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
            git \
            zip \
            unzip \
            openjdk-11-jdk \
            autoconf \
            libtool \
            pkg-config \
            zlib1g-dev \
            libncurses5-dev \
            libncursesw5-dev \
            libtinfo5 \
            cmake \
            libffi-dev \
            libssl-dev \
            libusb-1.0-0 \
            libgl1-mesa-dev \
            wget

    - name: Download and setup Android SDK
      run: |
        # Download Android Command Line Tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d cmdline-tools
        mkdir -p android-sdk/cmdline-tools
        mv cmdline-tools android-sdk/cmdline-tools/latest
        
        # Set environment variables
        echo "ANDROID_HOME=$PWD/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$PWD/android-sdk" >> $GITHUB_ENV
        echo "$PWD/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$PWD/android-sdk/platform-tools" >> $GITHUB_PATH
        
        # Accept licenses first
        yes | android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses || true

    - name: Install Android SDK components
      run: |
        # Install required Android components
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
          "platforms;android-33" \
          "build-tools;33.0.0" \
          "platform-tools" \
          "ndk;25.1.8937393" \
          "cmake;3.22.1"
        
        # Verify aidl is available
        ls -la $ANDROID_HOME/build-tools/33.0.0/aidl || echo "aidl not found"
        $ANDROID_HOME/build-tools/33.0.0/aidl --version || echo "Cannot run aidl"

    - name: Install Buildozer and dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer cython virtualenv

    - name: Clean previous builds
      run: |
        buildozer appclean || true
        rm -rf ~/.buildozer || true

    - name: Initialize Buildozer
      run: |
        buildozer init || true

    - name: Build APK with Buildozer
      run: |
        # Set environment variables for Buildozer
        export ANDROIDSDK=$ANDROID_HOME
        export ANDROIDNDK=$ANDROID_HOME/ndk/25.1.8937393
        export ANDROIDAPI=33
        
        # Build the APK
        buildozer -v android release
      env:
        P4A_RELEASE_KEYSTORE: ${{ secrets.P4A_RELEASE_KEYSTORE }}
        P4A_RELEASE_KEYSTORE_PASSWD: ${{ secrets.P4A_RELEASE_KEYSTORE_PASSWD }}
        P4A_RELEASE_KEYALIAS_PASSWD: ${{ secrets.P4A_RELEASE_KEYALIAS_PASSWD }}
        P4A_RELEASE_KEYALIAS: ${{ secrets.P4A_RELEASE_KEYALIAS }}

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: central-jati-cell-apk
        path: bin/*.apk
